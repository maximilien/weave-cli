---
name: Security

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  vulnerability-scan:
    name: Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Install security tools
        run: |
          chmod +x ./setup.sh
          ./setup.sh

      - name: Run Go vulnerability check
        run: |
          echo "Running comprehensive security checks..."
          govulncheck ./src/...
          echo "Vulnerability checks completed"

      - name: Run gosec security scanner
        run: |
          if command -v gosec >/dev/null 2>&1; then
            echo "Running additional security checks with gosec..."
            gosec ./src/...
          else
            echo "gosec not available, skipping additional security checks"
          fi
          echo "Security checks completed"

      - name: Upload security scan results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: |
            security-results.txt
          retention-days: 30

  dependency-audit:
    name: Dependency Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Check for outdated dependencies
        run: |
          echo "Checking for outdated dependencies..."
          go list -u -m all
          echo "Dependency check completed"

      - name: Verify go.mod and go.sum
        run: |
          echo "Verifying go.mod and go.sum..."
          go mod verify
          echo "Verification completed"

      - name: Check for direct dependencies with known vulnerabilities
        run: |
          echo "Checking direct dependencies..."
          go list -m all | grep -v "indirect"
          echo "Direct dependency check completed"

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: go

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
